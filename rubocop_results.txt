Inspecting 123 files
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

Offenses:

Gemfile:1:1: C: Layout/EndOfLine: Carriage return character detected.
source 'https://rubygems.org' ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
source 'https://rubygems.org'
^
Gemfile:8:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem pg should appear before rails.
gem 'pg'
^^^^^^^^
Gemfile:32:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem omniauth should appear before rubocop.
gem 'omniauth','~>1.9.1'
^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:32:15: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
gem 'omniauth','~>1.9.1'
              ^
Gemfile:33:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem devise should appear before omniauth.
gem 'devise'
^^^^^^^^^^^^
Gemfile:36:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
Gemfile:39:28: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
  gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:41:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem brakeman should appear before rspec-rails.
  gem 'brakeman'
  ^^^^^^^^^^^^^^
Gemfile:50:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem listen should appear before rack-mini-profiler.
  gem 'listen', '~> 3.3'
  ^^^^^^^^^^^^^^^^^^^^^^
Gemfile:61:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem simplecov should appear before webdrivers.
  gem 'simplecov', :require => false
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:61:20: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  gem 'simplecov', :require => false
                   ^^^^^^^^^^^
Gemfile:62:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
Gemfile:65:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
Gemfile:66:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
Gemfile:68:31: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby]
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Rakefile:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Add your own tasks in files placed in lib/tasks ending in .rake, ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Rakefile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Add your own tasks in files placed in lib/tasks ending in .rake,
^
Rakefile:4:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "config/application"
                 ^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/channel.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ApplicationCable ...
^^^^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/channel.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/channels/application_cable/connection.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ApplicationCable ...
^^^^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/connection.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/controllers/application_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ApplicationController < ActionController::Base ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationController < ActionController::Base
^
app/controllers/event_hists_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class EventHistsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/event_hists_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class EventHistsController.
class EventHistsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/event_hists_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EventHistsController < ApplicationController
^
app/controllers/event_hists_controller.rb:2:43: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_event_hist, only: %i[ show edit update destroy ]
                                          ^
app/controllers/event_hists_controller.rb:2:68: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_event_hist, only: %i[ show edit update destroy ]
                                                                   ^
app/controllers/event_hists_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/event_hists_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/event_hists_controller.rb:28:72: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to event_hist_url(@event_hist), notice: "Event hist was successfully created." }
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/event_hists_controller.rb:41:72: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to event_hist_url(@event_hist), notice: "Event hist was successfully updated." }
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/event_hists_controller.rb:55:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to event_hists_url, notice: "Event hist was successfully destroyed." }
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/event_hists_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/event_hists_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_event_hist
^^^^
app/controllers/event_hists_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_event_hist ...
    ^^^^^^^^^^^^^^^^^^
app/controllers/event_hists_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def event_hist_params
^^^^
app/controllers/event_hists_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def event_hist_params ...
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class EventsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class EventsController.
class EventsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EventsController < ApplicationController
^
app/controllers/events_controller.rb:2:38: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_event, only: %i[ show edit update destroy ]
                                     ^
app/controllers/events_controller.rb:2:63: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_event, only: %i[ show edit update destroy ]
                                                              ^
app/controllers/events_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/events_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/events_controller.rb:28:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to event_url(@event), notice: "Event was successfully created." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:41:62: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to event_url(@event), notice: "Event was successfully updated." }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:55:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to events_url, notice: "Event was successfully destroyed." }
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/events_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_event
^^^^
app/controllers/events_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_event ...
    ^^^^^^^^^^^^^
app/controllers/events_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def event_params
^^^^
app/controllers/events_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def event_params ...
    ^^^^^^^^^^^^^^^^
app/controllers/events_controller.rb:68:121: C: [Correctable] Layout/LineLength: Line is too long. [205/120]
      params.require(:event).permit(:event_id, :event_name, :event_type, :event_date, :description, :event_creator, :virtual, :password, :meeting_link, :signin_time, :point_val, :graphics, :total_event_hr)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/home_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class HomeController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/home_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class HomeController.
class HomeController < ApplicationController
^^^^^^^^^^^^^^^^^^^^
app/controllers/home_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class HomeController < ApplicationController
^
app/controllers/home_controller.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def index
^^^^
app/controllers/home_controller.rb:2:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
    def index ...
    ^^^^^^^^^
app/controllers/poin_events_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class PoinEventsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/poin_events_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class PoinEventsController.
class PoinEventsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/poin_events_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class PoinEventsController < ApplicationController
^
app/controllers/poin_events_controller.rb:2:43: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_poin_event, only: %i[ show edit update destroy ]
                                          ^
app/controllers/poin_events_controller.rb:2:68: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_poin_event, only: %i[ show edit update destroy ]
                                                                   ^
app/controllers/poin_events_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/poin_events_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/poin_events_controller.rb:28:72: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to poin_event_url(@poin_event), notice: "Poin event was successfully created." }
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/poin_events_controller.rb:41:72: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to poin_event_url(@poin_event), notice: "Poin event was successfully updated." }
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/poin_events_controller.rb:55:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to poin_events_url, notice: "Poin event was successfully destroyed." }
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/poin_events_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/poin_events_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_poin_event
^^^^
app/controllers/poin_events_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_poin_event ...
    ^^^^^^^^^^^^^^^^^^
app/controllers/poin_events_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def poin_event_params
^^^^
app/controllers/poin_events_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def poin_event_params ...
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/referrals_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ReferralsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/referrals_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ReferralsController.
class ReferralsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/referrals_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ReferralsController < ApplicationController
^
app/controllers/referrals_controller.rb:2:41: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_referral, only: %i[ show edit update destroy ]
                                        ^
app/controllers/referrals_controller.rb:2:66: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_referral, only: %i[ show edit update destroy ]
                                                                 ^
app/controllers/referrals_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/referrals_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/referrals_controller.rb:28:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to referral_url(@referral), notice: "Referral was successfully created." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/referrals_controller.rb:41:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to referral_url(@referral), notice: "Referral was successfully updated." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/referrals_controller.rb:55:56: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to referrals_url, notice: "Referral was successfully destroyed." }
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/referrals_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/referrals_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_referral
^^^^
app/controllers/referrals_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_referral ...
    ^^^^^^^^^^^^^^^^
app/controllers/referrals_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def referral_params
^^^^
app/controllers/referrals_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def referral_params ...
    ^^^^^^^^^^^^^^^^^^^
app/controllers/referrals_controller.rb:68:121: C: [Correctable] Layout/LineLength: Line is too long. [157/120]
      params.require(:referral).permit(:old_member, :new_member, :guest_first_name, :guest_last_name, :medical_prof, :email, :date_referred, :admin_approved)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class UsersController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class UsersController.
class UsersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UsersController < ApplicationController
^
app/controllers/users_controller.rb:2:37: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_user, only: %i[ show edit update destroy ]
                                    ^
app/controllers/users_controller.rb:2:62: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_user, only: %i[ show edit update destroy ]
                                                             ^
app/controllers/users_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/users_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/users_controller.rb:28:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to user_url(@user), notice: "User was successfully created." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:41:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to user_url(@user), notice: "User was successfully updated." }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:55:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to users_url, notice: "User was successfully destroyed." }
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/users_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_user
^^^^
app/controllers/users_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_user ...
    ^^^^^^^^^^^^
app/controllers/users_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def user_params
^^^^
app/controllers/users_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def user_params ...
    ^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ApplicationHelper ...
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ApplicationHelper.
module ApplicationHelper
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationHelper
^
app/helpers/event_hists_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module EventHistsHelper ...
^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/event_hists_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module EventHistsHelper.
module EventHistsHelper
^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/event_hists_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module EventHistsHelper
^
app/helpers/events_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module EventsHelper ...
^^^^^^^^^^^^^^^^^^^
app/helpers/events_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module EventsHelper.
module EventsHelper
^^^^^^^^^^^^^^^^^^^
app/helpers/events_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module EventsHelper
^
app/helpers/home_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module HomeHelper ...
^^^^^^^^^^^^^^^^^
app/helpers/home_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module HomeHelper.
module HomeHelper
^^^^^^^^^^^^^^^^^
app/helpers/home_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module HomeHelper
^
app/helpers/poin_events_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module PoinEventsHelper ...
^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/poin_events_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module PoinEventsHelper.
module PoinEventsHelper
^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/poin_events_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module PoinEventsHelper
^
app/helpers/referrals_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ReferralsHelper ...
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/referrals_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ReferralsHelper.
module ReferralsHelper
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/referrals_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ReferralsHelper
^
app/helpers/users_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module UsersHelper ...
^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module UsersHelper.
module UsersHelper
^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module UsersHelper
^
app/jobs/application_job.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ApplicationJob < ActiveJob::Base ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/jobs/application_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationJob < ActiveJob::Base
^
app/mailers/application_mailer.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ApplicationMailer < ActionMailer::Base ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/application_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationMailer < ActionMailer::Base
^
app/models/application_record.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ApplicationRecord < ActiveRecord::Base ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/application_record.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationRecord.
class ApplicationRecord < ActiveRecord::Base
^^^^^^^^^^^^^^^^^^^^^^^
app/models/application_record.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationRecord < ActiveRecord::Base
^
app/models/event.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Event < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/event.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Event < ApplicationRecord
^
app/models/event.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :event_hists
^^^^
app/models/event_hist.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class EventHist < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/event_hist.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EventHist < ApplicationRecord
^
app/models/event_hist.rb:2:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/poin_event.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class PoinEvent < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/poin_event.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class PoinEvent < ApplicationRecord
^
app/models/poin_event.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_one :user
^^^^
app/models/poin_event.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_one :event
^^^^
app/models/referral.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Referral < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/referral.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Referral < ApplicationRecord
^
app/models/user.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class User < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class User < ApplicationRecord
^
app/models/user.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :event_hists
^^^^
app/models/user.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :point_events
^^^^
app/models/user.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :referrals
^^^^
app/models/user.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :first_name, presence: true
^^^^
app/views/event_hists/_event_hist.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! event_hist, :id, :event_id, :user_id, :sign_in, :point_recv, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/event_hists/_event_hist.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! event_hist, :id, :event_id, :user_id, :sign_in, :point_recv, :created_at, :updated_at
^
app/views/event_hists/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @event_hists, partial: "event_hists/event_hist", as: :event_hist ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/event_hists/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @event_hists, partial: "event_hists/event_hist", as: :event_hist
^
app/views/event_hists/index.json.jbuilder:1:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @event_hists, partial: "event_hists/event_hist", as: :event_hist
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
app/views/event_hists/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "event_hists/event_hist", event_hist: @event_hist ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/event_hists/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "event_hists/event_hist", event_hist: @event_hist
^
app/views/event_hists/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "event_hists/event_hist", event_hist: @event_hist
              ^^^^^^^^^^^^^^^^^^^^^^^^
app/views/events/_event.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! event, :id, :event_id, :event_name, :event_type, :event_date, :description, :event_creator, :virtual, :password, :meeting_link, :signin_time, :point_val, :graphics, :total_event_hr, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/events/_event.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! event, :id, :event_id, :event_name, :event_type, :event_date, :description, :event_creator, :virtual, :password, :meeting_link, :signin_time, :point_val, :graphics, :total_event_hr, :created_at, :updated_at
^
app/views/events/_event.json.jbuilder:1:121: C: [Correctable] Layout/LineLength: Line is too long. [220/120]
json.extract! event, :id, :event_id, :event_name, :event_type, :event_date, :description, :event_creator, :virtual, :password, :meeting_link, :signin_time, :point_val, :graphics, :total_event_hr, :created_at, :updated_at
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/events/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @events, partial: "events/event", as: :event ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/events/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @events, partial: "events/event", as: :event
^
app/views/events/index.json.jbuilder:1:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @events, partial: "events/event", as: :event
                              ^^^^^^^^^^^^^^
app/views/events/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "events/event", event: @event ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/events/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "events/event", event: @event
^
app/views/events/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "events/event", event: @event
              ^^^^^^^^^^^^^^
app/views/poin_events/_poin_event.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! poin_event, :id, :user_id, :balance, :date, :description, :admin_award_id, :hours_attend, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/poin_events/_poin_event.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! poin_event, :id, :user_id, :balance, :date, :description, :admin_award_id, :hours_attend, :created_at, :updated_at
^
app/views/poin_events/_poin_event.json.jbuilder:1:121: C: [Correctable] Layout/LineLength: Line is too long. [128/120]
json.extract! poin_event, :id, :user_id, :balance, :date, :description, :admin_award_id, :hours_attend, :created_at, :updated_at
                                                                                                                        ^^^^^^^^
app/views/poin_events/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @poin_events, partial: "poin_events/poin_event", as: :poin_event ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/poin_events/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @poin_events, partial: "poin_events/poin_event", as: :poin_event
^
app/views/poin_events/index.json.jbuilder:1:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @poin_events, partial: "poin_events/poin_event", as: :poin_event
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
app/views/poin_events/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "poin_events/poin_event", poin_event: @poin_event ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/poin_events/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "poin_events/poin_event", poin_event: @poin_event
^
app/views/poin_events/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "poin_events/poin_event", poin_event: @poin_event
              ^^^^^^^^^^^^^^^^^^^^^^^^
app/views/referrals/_referral.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! referral, :id, :old_member, :new_member, :guest_first_name, :guest_last_name, :medical_prof, :email, :date_referred, :admin_approved, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/referrals/_referral.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! referral, :id, :old_member, :new_member, :guest_first_name, :guest_last_name, :medical_prof, :email, :date_referred, :admin_approved, :created_at, :updated_at
^
app/views/referrals/_referral.json.jbuilder:1:121: C: [Correctable] Layout/LineLength: Line is too long. [172/120]
json.extract! referral, :id, :old_member, :new_member, :guest_first_name, :guest_last_name, :medical_prof, :email, :date_referred, :admin_approved, :created_at, :updated_at
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/referrals/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @referrals, partial: "referrals/referral", as: :referral ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/referrals/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @referrals, partial: "referrals/referral", as: :referral
^
app/views/referrals/index.json.jbuilder:1:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @referrals, partial: "referrals/referral", as: :referral
                                 ^^^^^^^^^^^^^^^^^^^^
app/views/referrals/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "referrals/referral", referral: @referral ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/referrals/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "referrals/referral", referral: @referral
^
app/views/referrals/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "referrals/referral", referral: @referral
              ^^^^^^^^^^^^^^^^^^^^
app/views/users/_user.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! user, :id, :user_id, :major, :admin, :email, :first_name, :last_name, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/users/_user.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! user, :id, :user_id, :major, :admin, :email, :first_name, :last_name, :created_at, :updated_at
^
app/views/users/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @users, partial: "users/user", as: :user ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/users/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @users, partial: "users/user", as: :user
^
app/views/users/index.json.jbuilder:1:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @users, partial: "users/user", as: :user
                             ^^^^^^^^^^^^
app/views/users/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "users/user", user: @user ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/users/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "users/user", user: @user
^
app/views/users/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "users/user", user: @user
              ^^^^^^^^^^^^
bin/bundle:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/bundle:11:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rubygems"
        ^^^^^^^^^^
bin/bundle:17:22: C: [Correctable] Style/SpecialGlobalVars: Prefer $PROGRAM_NAME over $0.
    File.expand_path($0) == File.expand_path(__FILE__)
                     ^^
bin/bundle:21:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["BUNDLER_VERSION"]
        ^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for cli_arg_version is too high. [9/7]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/MethodLength: Method has too many lines. [13/10]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/PerceivedComplexity: Perceived complexity for cli_arg_version is too high. [9/8]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:26:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:26:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
                  ^^^^^^^^
bin/bundle:26:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
                                                     ^^^
bin/bundle:30:7: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if update_index && update_index.succ == i && a =~ Gem::Version::ANCHORED_VERSION_PATTERN
      ^^
bin/bundle:33:7: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      next unless a =~ /\A--bundler(?:[= ](#{Gem::Version::VERSION_PATTERN}))?\z/
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:34:25: C: [Correctable] Style/PerlBackrefs: Prefer Regexp.last_match(1) over $1.
      bundler_version = $1
                        ^^
bin/bundle:41:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    gemfile = ENV["BUNDLE_GEMFILE"]
                  ^^^^^^^^^^^^^^^^
bin/bundle:44:10: C: [Correctable] Style/ExpandPathArguments: Use expand_path('../Gemfile', __dir__) instead of expand_path('../../Gemfile', __FILE__).
    File.expand_path("../../Gemfile", __FILE__)
         ^^^^^^^^^^^
bin/bundle:44:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    File.expand_path("../../Gemfile", __FILE__)
                     ^^^^^^^^^^^^^^^
bin/bundle:50:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      when "gems.rb" then gemfile.sub(/\.rb$/, gemfile)
           ^^^^^^^^^
bin/bundle:57:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless File.file?(lockfile)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:59:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless lockfile_contents =~ /\n\nBUNDLED WITH\n\s{2,}(#{Gem::Version::VERSION_PATTERN})\n/
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:66:9: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of an expression in an assignment spanning multiple lines.
        bundler_requirement_for(lockfile_version)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:76:81: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return requirement unless Gem::Version.new(Gem::VERSION) < Gem::Version.new("2.7.0")
                                                                                ^^^^^^^
bin/bundle:78:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    requirement += ".a" if bundler_gem_version.prerelease?
                   ^^^^
bin/bundle:84:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["BUNDLE_GEMFILE"] ||= gemfile
        ^^^^^^^^^^^^^^^^
bin/bundle:91:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      gem "bundler", bundler_requirement
          ^^^^^^^^^
bin/bundle:93:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return if gem_error.nil?
    ^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:95:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      require "bundler/version"
              ^^^^^^^^^^^^^^^^^
bin/bundle:97:5: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:97:12: C: [Correctable] Style/IfUnlessModifier: Modifier form of if makes the line too long.
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
           ^^
bin/bundle:97:121: C: Layout/LineLength: Line is too long. [127/120]
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
                                                                                                                        ^^^^^^^
bin/bundle:98:121: C: Layout/LineLength: Line is too long. [198/120]
    warn "Activating bundler (#{bundler_requirement}) failed:\n#{gem_error.message}\n\nTo install the version of bundler this project requires, run `gem install bundler -v '#{bundler_requirement}'`"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:112:1: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
if m.invoked_as_script?
^^
bin/bundle:113:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load Gem.bin_path("bundler", "bundle")
                    ^^^^^^^^^
bin/bundle:113:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load Gem.bin_path("bundler", "bundle")
                               ^^^^^^^^
bin/rails:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/rails:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/rails:2:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
load File.expand_path("spring", __dir__)
                      ^^^^^^^^
bin/rails:4:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/boot"
                 ^^^^^^^^^^^^^^^^
bin/rails:5:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/commands"
        ^^^^^^^^^^^^^^^^
bin/rake:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/rake:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/rake:2:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
load File.expand_path("spring", __dir__)
                      ^^^^^^^^
bin/rake:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/boot"
                 ^^^^^^^^^^^^^^^^
bin/rake:4:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rake"
        ^^^^^^
bin/setup:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/setup:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/setup:2:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "fileutils"
        ^^^^^^^^^^^
bin/spring:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/spring:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/spring:2:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
if !defined?(Spring) && [nil, "development", "test"].include?(ENV["RAILS_ENV"])
                              ^^^^^^^^^^^^^
bin/spring:2:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
if !defined?(Spring) && [nil, "development", "test"].include?(ENV["RAILS_ENV"])
                                             ^^^^^^
bin/spring:2:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
if !defined?(Spring) && [nil, "development", "test"].include?(ENV["RAILS_ENV"])
                                                                  ^^^^^^^^^^^
bin/spring:3:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "bundler"
      ^^^^^^^^^
bin/spring:4:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  require "bundler"
          ^^^^^^^^^
bin/spring:7:58: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  Bundler.locked_gems&.specs&.find { |spec| spec.name == "spring" }&.tap do |spring|
                                                         ^^^^^^^^
bin/spring:9:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    gem "spring", spring.version
        ^^^^^^^^
bin/spring:10:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    require "spring/binstub"
            ^^^^^^^^^^^^^^^^
bin/webpack:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/webpack:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack:3:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
    ^^^^^^^^^^^
bin/webpack:3:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                         ^^^^^^^^^^
bin/webpack:3:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                                        ^^^^^^^^^^^^^
bin/webpack:4:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
    ^^^^^^^^^^
bin/webpack:4:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
                     ^^^^^^^^^^^^^
bin/webpack:6:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "pathname"
        ^^^^^^^^^^
bin/webpack:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
    ^^^^^^^^^^^^^^^^
bin/webpack:7:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
                                           ^^^^^^^^^^^^^^^
bin/webpack:8:3: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
  Pathname.new(__FILE__).realpath)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack:10:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup"
        ^^^^^^^^^^^^^^^
bin/webpack:12:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker"
        ^^^^^^^^^^^
bin/webpack:13:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker/webpack_runner"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack:15:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
APP_ROOT = File.expand_path("..", __dir__)
                            ^^^^
bin/webpack-dev-server:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/webpack-dev-server:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack-dev-server:3:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
    ^^^^^^^^^^^
bin/webpack-dev-server:3:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                         ^^^^^^^^^^
bin/webpack-dev-server:3:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                                        ^^^^^^^^^^^^^
bin/webpack-dev-server:4:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
    ^^^^^^^^^^
bin/webpack-dev-server:4:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
                     ^^^^^^^^^^^^^
bin/webpack-dev-server:6:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "pathname"
        ^^^^^^^^^^
bin/webpack-dev-server:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
    ^^^^^^^^^^^^^^^^
bin/webpack-dev-server:7:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
                                           ^^^^^^^^^^^^^^^
bin/webpack-dev-server:8:3: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
  Pathname.new(__FILE__).realpath)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack-dev-server:10:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup"
        ^^^^^^^^^^^^^^^
bin/webpack-dev-server:12:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker"
        ^^^^^^^^^^^
bin/webpack-dev-server:13:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker/dev_server_runner"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack-dev-server:15:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
APP_ROOT = File.expand_path("..", __dir__)
                            ^^^^
bin/yarn:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/yarn:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/yarn:4:10: C: [Correctable] Style/InverseMethods: Use reject instead of inverting select.
  yarn = ENV["PATH"].split(File::PATH_SEPARATOR). ...
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/yarn:4:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  yarn = ENV["PATH"].split(File::PATH_SEPARATOR).
             ^^^^^^
bin/yarn:4:49: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
  yarn = ENV["PATH"].split(File::PATH_SEPARATOR).
                                                ^
bin/yarn:5:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align select with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    select { |dir| File.expand_path(dir) != __dir__ }.
    ^^^^^^
bin/yarn:5:54: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
    select { |dir| File.expand_path(dir) != __dir__ }.
                                                     ^
bin/yarn:6:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align product with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
    ^^^^^^^
bin/yarn:6:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
             ^^^^^^
bin/yarn:6:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
                     ^^^^^^^^^^
bin/yarn:6:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
                                 ^^^^^^^^^^
bin/yarn:6:46: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
    product(["yarn", "yarn.cmd", "yarn.ps1"]).
                                             ^
bin/yarn:7:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align map with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    map { |dir, file| File.expand_path(file, dir) }.
    ^^^
bin/yarn:7:52: C: [Correctable] Layout/DotPosition: Place the . on the next line, together with the method name.
    map { |dir, file| File.expand_path(file, dir) }.
                                                   ^
bin/yarn:8:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align find with ENV["PATH"].split(File::PATH_SEPARATOR). on line 4.
    find { |file| File.executable?(file) }
    ^^^^
bin/yarn:13:5: C: [Correctable] Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
    $stderr.puts "Yarn executable was not detected in the system."
    ^^^^^^^^^^^^
bin/yarn:13:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    $stderr.puts "Yarn executable was not detected in the system."
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/yarn:14:5: C: [Correctable] Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
    $stderr.puts "Download Yarn at https://yarnpkg.com/en/docs/install"
    ^^^^^^^^^^^^
bin/yarn:14:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    $stderr.puts "Download Yarn at https://yarnpkg.com/en/docs/install"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config.ru:1:1: C: Layout/EndOfLine: Carriage return character detected.
# This file is used by Rack-based servers to start the application. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is used by Rack-based servers to start the application.
^
config.ru:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "config/environment"
                 ^^^^^^^^^^^^^^^^^^^^
config/application.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require_relative "boot" ...
^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require_relative "boot"
^
config/application.rb:1:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "boot"
                 ^^^^^^
config/application.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/all"
        ^^^^^^^^^^^
config/application.rb:10:3: C: Style/Documentation: Missing top-level documentation comment for class LMSAApp::Application.
  class Application < Rails::Application
  ^^^^^^^^^^^^^^^^^
config/boot.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__) ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/boot.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)
^
config/boot.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup" # Set up gems listed in the Gemfile.
        ^^^^^^^^^^^^^^^
config/boot.rb:4:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bootsnap/setup" # Speed up boot time by caching expensive operations.
        ^^^^^^^^^^^^^^^^
config/environment.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Load the Rails application. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environment.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Load the Rails application.
^
config/environment.rb:2:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "application"
                 ^^^^^^^^^^^^^
config/environments/development.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "active_support/core_ext/integer/time" ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/development.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "active_support/core_ext/integer/time" ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/production.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:56:22: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                     ^
config/environments/production.rb:56:34: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                                 ^
config/environments/production.rb:91:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if ENV["RAILS_LOG_TO_STDOUT"].present?
         ^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:92:50: C: [Correctable] Style/GlobalStdStream: Use $stdout instead of STDOUT.
    logger           = ActiveSupport::Logger.new(STDOUT)
                                                 ^^^^^^
config/environments/test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "active_support/core_ext/integer/time" ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/application_controller_renderer.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/application_controller_renderer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/assets.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/backtrace_silencers.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/backtrace_silencers.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/backtrace_silencers.rb:8:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Rails.backtrace_cleaner.remove_silencers! if ENV["BACKTRACE"]
                                                 ^^^^^^^^^^^
config/initializers/content_security_policy.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/content_security_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/cookies_serializer.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/cookies_serializer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/filter_parameter_logging.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/filter_parameter_logging.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/filter_parameter_logging.rb:4:47: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
Rails.application.config.filter_parameters += [ ...
                                              ^
config/initializers/inflections.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/inflections.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/mime_types.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/mime_types.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/permissions_policy.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Define an application-wide HTTP permissions policy. For further ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/permissions_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Define an application-wide HTTP permissions policy. For further
^
config/initializers/wrap_parameters.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/wrap_parameters.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/puma.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Puma can serve each request in a thread from an internal thread pool. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Puma can serve each request in a thread from an internal thread pool.
^
config/puma.rb:7:25: C: [Correctable] Style/RedundantFetchBlock: Use fetch("RAILS_MAX_THREADS", 5) instead of fetch("RAILS_MAX_THREADS") { 5 }.
max_threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:7:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
max_threads_count = ENV.fetch("RAILS_MAX_THREADS") { 5 }
                              ^^^^^^^^^^^^^^^^^^^
config/puma.rb:8:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
min_threads_count = ENV.fetch("RAILS_MIN_THREADS") { max_threads_count }
                              ^^^^^^^^^^^^^^^^^^^
config/puma.rb:14:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                 ^^^^^^^^^^^
config/puma.rb:14:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                              ^^^^^^^^^^^^^
config/puma.rb:14:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
worker_timeout 3600 if ENV.fetch("RAILS_ENV", "development") == "development"
                                                                ^^^^^^^^^^^^^
config/puma.rb:18:10: C: [Correctable] Style/RedundantFetchBlock: Use fetch("PORT", 3000) instead of fetch("PORT") { 3000 }.
port ENV.fetch("PORT") { 3000 }
         ^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:18:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
port ENV.fetch("PORT") { 3000 }
               ^^^^^^
config/puma.rb:22:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
environment ENV.fetch("RAILS_ENV") { "development" }
                      ^^^^^^^^^^^
config/puma.rb:22:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
environment ENV.fetch("RAILS_ENV") { "development" }
                                     ^^^^^^^^^^^^^
config/puma.rb:25:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pidfile ENV.fetch("PIDFILE") { "tmp/pids/server.pid" }
                  ^^^^^^^^^
config/puma.rb:25:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
pidfile ENV.fetch("PIDFILE") { "tmp/pids/server.pid" }
                               ^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
Rails.application.routes.draw do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Rails.application.routes.draw do
^
config/spring.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
Spring.watch( ...
^^^^^^^^^^^^^
config/spring.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Spring.watch(
^
config/spring.rb:2:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ".ruby-version",
  ^^^^^^^^^^^^^^^
config/spring.rb:3:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ".rbenv-vars",
  ^^^^^^^^^^^^^
config/spring.rb:4:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "tmp/restart.txt",
  ^^^^^^^^^^^^^^^^^
config/spring.rb:5:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  "tmp/caching-dev.txt"
  ^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220211195326_create_users.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateUsers < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220211195326_create_users.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateUsers.
class CreateUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^
db/migrate/20220211195326_create_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateUsers < ActiveRecord::Migration[6.1]
^
db/migrate/20220211195344_create_event_hists.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateEventHists < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220211195344_create_event_hists.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateEventHists.
class CreateEventHists < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220211195344_create_event_hists.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateEventHists < ActiveRecord::Migration[6.1]
^
db/migrate/20220211195354_create_events.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateEvents < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220211195354_create_events.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateEvents.
class CreateEvents < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^
db/migrate/20220211195354_create_events.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateEvents < ActiveRecord::Migration[6.1]
^
db/migrate/20220211195354_create_events.rb:2:3: C: Metrics/MethodLength: Method has too many lines. [16/10]
  def change ...
  ^^^^^^^^^^
db/migrate/20220211195404_create_referrals.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateReferrals < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220211195404_create_referrals.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateReferrals.
class CreateReferrals < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220211195404_create_referrals.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateReferrals < ActiveRecord::Migration[6.1]
^
db/migrate/20220211195404_create_referrals.rb:2:3: C: Metrics/MethodLength: Method has too many lines. [11/10]
  def change ...
  ^^^^^^^^^^
db/migrate/20220211195428_create_poin_events.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreatePoinEvents < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220211195428_create_poin_events.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreatePoinEvents.
class CreatePoinEvents < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220211195428_create_poin_events.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreatePoinEvents < ActiveRecord::Migration[6.1]
^
db/schema.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# This file is auto-generated from the current state of the database. Instead ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is auto-generated from the current state of the database. Instead
^
db/schema.rb:13:1: C: Metrics/BlockLength: Block has too many lines. [58/25]
ActiveRecord::Schema.define(version: 2022_02_11_195428) do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:13:38: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
ActiveRecord::Schema.define(version: 2022_02_11_195428) do
                                     ^^^^^^^^^^^^^^^^^
db/schema.rb:14:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
db/schema.rb:16:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  enable_extension "plpgsql"
                   ^^^^^^^^^
db/schema.rb:18:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "event_hists", force: :cascade do |t|
               ^^^^^^^^^^^^^
db/schema.rb:19:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "event_id"
              ^^^^^^^^^^
db/schema.rb:20:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "user_id"
              ^^^^^^^^^
db/schema.rb:21:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "sign_in"
              ^^^^^^^^^
db/schema.rb:22:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "point_recv"
              ^^^^^^^^^^^^
db/schema.rb:23:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:24:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:27:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "events", force: :cascade do |t|
               ^^^^^^^^
db/schema.rb:28:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "event_id"
              ^^^^^^^^^^
db/schema.rb:29:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "event_name"
             ^^^^^^^^^^^^
db/schema.rb:30:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "event_type"
             ^^^^^^^^^^^^
db/schema.rb:31:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "event_date"
               ^^^^^^^^^^^^
db/schema.rb:32:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "description"
             ^^^^^^^^^^^^^
db/schema.rb:33:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "event_creator"
              ^^^^^^^^^^^^^^^
db/schema.rb:34:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "virtual"
              ^^^^^^^^^
db/schema.rb:35:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "password"
             ^^^^^^^^^^
db/schema.rb:36:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "meeting_link"
             ^^^^^^^^^^^^^^
db/schema.rb:37:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "signin_time"
               ^^^^^^^^^^^^^
db/schema.rb:38:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "point_val"
              ^^^^^^^^^^^
db/schema.rb:39:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "graphics"
             ^^^^^^^^^^
db/schema.rb:40:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float "total_event_hr"
            ^^^^^^^^^^^^^^^^
db/schema.rb:41:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:42:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:45:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "poin_events", force: :cascade do |t|
               ^^^^^^^^^^^^^
db/schema.rb:46:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "user_id"
              ^^^^^^^^^
db/schema.rb:47:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "balance"
              ^^^^^^^^^
db/schema.rb:48:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "date"
               ^^^^^^
db/schema.rb:49:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "description"
             ^^^^^^^^^^^^^
db/schema.rb:50:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "admin_award_id"
              ^^^^^^^^^^^^^^^^
db/schema.rb:51:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float "hours_attend"
            ^^^^^^^^^^^^^^
db/schema.rb:52:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:53:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:56:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "referrals", force: :cascade do |t|
               ^^^^^^^^^^^
db/schema.rb:57:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "old_member"
              ^^^^^^^^^^^^
db/schema.rb:58:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "new_member"
              ^^^^^^^^^^^^
db/schema.rb:59:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "guest_first_name"
             ^^^^^^^^^^^^^^^^^^
db/schema.rb:60:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "guest_last_name"
             ^^^^^^^^^^^^^^^^^
db/schema.rb:61:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "medical_prof"
              ^^^^^^^^^^^^^^
db/schema.rb:62:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email"
             ^^^^^^^
db/schema.rb:63:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "date_referred"
               ^^^^^^^^^^^^^^^
db/schema.rb:64:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "admin_approved"
             ^^^^^^^^^^^^^^^^
db/schema.rb:65:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:66:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:69:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "users", force: :cascade do |t|
               ^^^^^^^
db/schema.rb:70:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "user_id"
              ^^^^^^^^^
db/schema.rb:71:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "major"
             ^^^^^^^
db/schema.rb:72:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean "admin"
              ^^^^^^^
db/schema.rb:73:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email"
             ^^^^^^^
db/schema.rb:74:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "first_name"
             ^^^^^^^^^^^^
db/schema.rb:75:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "last_name"
             ^^^^^^^^^^^
db/schema.rb:76:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:77:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:79:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
db/seeds.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# This file should contain all the record creation needed to seed the database with its default values. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file should contain all the record creation needed to seed the database with its default values.
^
spec/helpers/event_hists_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/event_hists_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/events_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/events_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/home_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/home_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/poin_events_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/poin_events_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/referrals_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/referrals_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/users_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/users_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/event_hist_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_hist_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/event_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/event_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/poin_event_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/poin_event_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/referral_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/referral_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/user_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/rails_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# This file is copied to spec/ when you run 'rails generate rspec:install' ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is copied to spec/ when you run 'rails generate rspec:install'
^
spec/rails_helper.rb:6:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
abort("The Rails environment is running in production mode!") if Rails.env.production?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/event_hists_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [96/25]
RSpec.describe "/event_hists", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/event_hists", type: :request do
               ^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/event_hists_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/event_hists_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/event_hists_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/event_hists_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:44:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/event_hists_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:51:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/event_hists_spec.rb:52:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:59:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:60:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:61:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new EventHist" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:62:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/event_hists_spec.rb:67:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created event_hist" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:73:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:74:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new EventHist" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:75:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/event_hists_spec.rb:87:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:88:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:89:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/event_hists_spec.rb:90:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:93:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested event_hist" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:97:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:100:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the event_hist" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:108:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:117:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:118:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested event_hist" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/event_hists_spec.rb:120:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/event_hists_spec.rb:125:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the event_hists list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/events_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [96/25]
RSpec.describe "/events", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/events", type: :request do
               ^^^^^^^^^
spec/requests/events_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/events_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/events_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/events_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/events_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/events_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:44:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/events_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:51:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/events_spec.rb:52:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:59:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/events_spec.rb:60:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:61:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new Event" do
         ^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:62:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/events_spec.rb:67:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created event" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:73:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:74:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new Event" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:75:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/events_spec.rb:87:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:88:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:89:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/events_spec.rb:90:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:93:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested event" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:97:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:100:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the event" do
         ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:108:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:117:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:118:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested event" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/events_spec.rb:120:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/events_spec.rb:125:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the events list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/home_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/home_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/home_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Homes", type: :request do
               ^^^^^^^
spec/requests/home_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/poin_events_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [96/25]
RSpec.describe "/poin_events", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/poin_events", type: :request do
               ^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/poin_events_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/poin_events_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/poin_events_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/poin_events_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:44:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/poin_events_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:51:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/poin_events_spec.rb:52:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:59:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:60:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:61:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new PoinEvent" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:62:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/poin_events_spec.rb:67:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created poin_event" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:73:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:74:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new PoinEvent" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:75:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/poin_events_spec.rb:87:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:88:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:89:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/poin_events_spec.rb:90:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:93:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested poin_event" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:97:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:100:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the poin_event" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:108:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:117:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:118:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested poin_event" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/poin_events_spec.rb:120:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/poin_events_spec.rb:125:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the poin_events list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/referrals_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [96/25]
RSpec.describe "/referrals", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/referrals", type: :request do
               ^^^^^^^^^^^^
spec/requests/referrals_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/referrals_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/referrals_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/referrals_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/referrals_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/referrals_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:44:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/referrals_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:51:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/referrals_spec.rb:52:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:59:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:60:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:61:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new Referral" do
         ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:62:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/referrals_spec.rb:67:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created referral" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:73:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:74:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new Referral" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:75:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/referrals_spec.rb:87:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:88:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:89:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/referrals_spec.rb:90:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:93:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested referral" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:97:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:100:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the referral" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:108:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:117:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:118:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested referral" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/referrals_spec.rb:120:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/referrals_spec.rb:125:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the referrals list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/users_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [102/25]
RSpec.describe "/users", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/users", type: :request do
               ^^^^^^^^
spec/requests/users_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/users_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) { {
                         ^
spec/requests/users_spec.rb:20:28: C: [Correctable] Layout/MultilineBlockLayout: Block body expression is on the same line as the block start.
  let(:valid_attributes) { { ...
                           ^
spec/requests/users_spec.rb:21:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #skip("Add a hash of attributes valid for your model")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:23:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    major: "something",
           ^^^^^^^^^^^
spec/requests/users_spec.rb:25:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    email: "fname.lname@tamu.edu",
           ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:26:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    first_name: "fname",
                ^^^^^^^
spec/requests/users_spec.rb:27:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    last_name: "lname"
               ^^^^^^^
spec/requests/users_spec.rb:28:5: C: [Correctable] Layout/BlockEndNewline: Expression at 28, 5 should be on its own line.
  } }
    ^
spec/requests/users_spec.rb:30:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/users_spec.rb:31:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #skip("Add a hash of attributes invalid for your model")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:33:5: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
    user_id: nil,
    ^^^^^^^^^^^^
spec/requests/users_spec.rb:34:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    major: "something",
           ^^^^^^^^^^^
spec/requests/users_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    email: "fname.lname@tamu.edu",
           ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:42:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/users_spec.rb:43:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:50:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/users_spec.rb:51:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:58:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/users_spec.rb:59:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:65:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/users_spec.rb:66:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:73:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/users_spec.rb:74:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:75:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new User" do
         ^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:76:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/users_spec.rb:81:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created user" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:87:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:88:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new User" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:89:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/users_spec.rb:94:7: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 6 instead of 8).
      #it "renders a successful response (i.e. to display the 'new' template)" do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:94:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #it "renders a successful response (i.e. to display the 'new' template)" do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:95:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #post users_url, params: { user: invalid_attributes }
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:96:9: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 8 instead of 6).
        #expect(response).to be_successful
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:96:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #expect(response).to be_successful
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:97:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #end
      ^^^^
spec/requests/users_spec.rb:101:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:102:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:103:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/users_spec.rb:104:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #skip("Add a hash of attributes valid for your model")
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:106:11: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
          #user_id: nil,
          ^^^^^^^^^^^^^^
spec/requests/users_spec.rb:107:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          major: "something else",
                 ^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:109:11: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
          #email: "fname.lname@tamu.edu",
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:110:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          first_name: "fname2",
                      ^^^^^^^^
spec/requests/users_spec.rb:111:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          last_name: "lname2"
                     ^^^^^^^^
spec/requests/users_spec.rb:113:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/requests/users_spec.rb:116:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested user" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:120:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:123:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the user" do
         ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:131:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 6).
    #context "with invalid parameters" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:131:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #context "with invalid parameters" do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:132:7: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 6 instead of 8).
      #it "renders a successful response (i.e. to display the 'edit' template)" do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:132:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #it "renders a successful response (i.e. to display the 'edit' template)" do
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:133:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #user = User.create! valid_attributes
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:134:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #patch user_url(user), params: { user: invalid_attributes }
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:135:9: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 8 instead of 6).
        #expect(response).to be_successful
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:135:9: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
        #expect(response).to be_successful
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:136:7: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 6 instead of 4).
      #end
      ^^^^
spec/requests/users_spec.rb:136:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #end
      ^^^^
spec/requests/users_spec.rb:137:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #end
    ^^^^
spec/requests/users_spec.rb:140:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:141:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested user" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:143:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/users_spec.rb:148:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the users list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/event_hists_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe EventHistsController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/event_hists").to route_to("event_hists#index")
                  ^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:6:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/event_hists").to route_to("event_hists#index")
                                              ^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/event_hists/new").to route_to("event_hists#new")
                  ^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:10:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/event_hists/new").to route_to("event_hists#new")
                                                  ^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/event_hists/1").to route_to("event_hists#show", id: "1")
                  ^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:14:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/event_hists/1").to route_to("event_hists#show", id: "1")
                                                ^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:14:73: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/event_hists/1").to route_to("event_hists#show", id: "1")
                                                                        ^^^
spec/routing/event_hists_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/event_hists/1/edit").to route_to("event_hists#edit", id: "1")
                  ^^^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:18:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/event_hists/1/edit").to route_to("event_hists#edit", id: "1")
                                                     ^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:18:78: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/event_hists/1/edit").to route_to("event_hists#edit", id: "1")
                                                                             ^^^
spec/routing/event_hists_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/event_hists_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/event_hists").to route_to("event_hists#create")
                   ^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:23:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/event_hists").to route_to("event_hists#create")
                                               ^^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/event_hists/1").to route_to("event_hists#update", id: "1")
                  ^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:27:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/event_hists/1").to route_to("event_hists#update", id: "1")
                                                ^^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:27:75: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/event_hists/1").to route_to("event_hists#update", id: "1")
                                                                          ^^^
spec/routing/event_hists_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/event_hists/1").to route_to("event_hists#update", id: "1")
                    ^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:31:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/event_hists/1").to route_to("event_hists#update", id: "1")
                                                  ^^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:31:77: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/event_hists/1").to route_to("event_hists#update", id: "1")
                                                                            ^^^
spec/routing/event_hists_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/event_hists/1").to route_to("event_hists#destroy", id: "1")
                     ^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:35:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/event_hists/1").to route_to("event_hists#destroy", id: "1")
                                                   ^^^^^^^^^^^^^^^^^^^^^
spec/routing/event_hists_routing_spec.rb:35:79: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/event_hists/1").to route_to("event_hists#destroy", id: "1")
                                                                              ^^^
spec/routing/events_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/events_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe EventsController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/events_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events").to route_to("events#index")
                  ^^^^^^^^^
spec/routing/events_routing_spec.rb:6:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events").to route_to("events#index")
                                         ^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/new").to route_to("events#new")
                  ^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:10:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/new").to route_to("events#new")
                                             ^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1").to route_to("events#show", id: "1")
                  ^^^^^^^^^^^
spec/routing/events_routing_spec.rb:14:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1").to route_to("events#show", id: "1")
                                           ^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:14:63: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1").to route_to("events#show", id: "1")
                                                              ^^^
spec/routing/events_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1/edit").to route_to("events#edit", id: "1")
                  ^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:18:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1/edit").to route_to("events#edit", id: "1")
                                                ^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:18:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/events/1/edit").to route_to("events#edit", id: "1")
                                                                   ^^^
spec/routing/events_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/events_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/events").to route_to("events#create")
                   ^^^^^^^^^
spec/routing/events_routing_spec.rb:23:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/events").to route_to("events#create")
                                          ^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/events/1").to route_to("events#update", id: "1")
                  ^^^^^^^^^^^
spec/routing/events_routing_spec.rb:27:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/events/1").to route_to("events#update", id: "1")
                                           ^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:27:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/events/1").to route_to("events#update", id: "1")
                                                                ^^^
spec/routing/events_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/events/1").to route_to("events#update", id: "1")
                    ^^^^^^^^^^^
spec/routing/events_routing_spec.rb:31:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/events/1").to route_to("events#update", id: "1")
                                             ^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:31:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/events/1").to route_to("events#update", id: "1")
                                                                  ^^^
spec/routing/events_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/events/1").to route_to("events#destroy", id: "1")
                     ^^^^^^^^^^^
spec/routing/events_routing_spec.rb:35:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/events/1").to route_to("events#destroy", id: "1")
                                              ^^^^^^^^^^^^^^^^
spec/routing/events_routing_spec.rb:35:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/events/1").to route_to("events#destroy", id: "1")
                                                                    ^^^
spec/routing/poin_events_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/poin_events_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe PoinEventsController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/poin_events").to route_to("poin_events#index")
                  ^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:6:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/poin_events").to route_to("poin_events#index")
                                              ^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/poin_events/new").to route_to("poin_events#new")
                  ^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:10:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/poin_events/new").to route_to("poin_events#new")
                                                  ^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/poin_events/1").to route_to("poin_events#show", id: "1")
                  ^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:14:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/poin_events/1").to route_to("poin_events#show", id: "1")
                                                ^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:14:73: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/poin_events/1").to route_to("poin_events#show", id: "1")
                                                                        ^^^
spec/routing/poin_events_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/poin_events/1/edit").to route_to("poin_events#edit", id: "1")
                  ^^^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:18:54: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/poin_events/1/edit").to route_to("poin_events#edit", id: "1")
                                                     ^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:18:78: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/poin_events/1/edit").to route_to("poin_events#edit", id: "1")
                                                                             ^^^
spec/routing/poin_events_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/poin_events_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/poin_events").to route_to("poin_events#create")
                   ^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:23:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/poin_events").to route_to("poin_events#create")
                                               ^^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/poin_events/1").to route_to("poin_events#update", id: "1")
                  ^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:27:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/poin_events/1").to route_to("poin_events#update", id: "1")
                                                ^^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:27:75: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/poin_events/1").to route_to("poin_events#update", id: "1")
                                                                          ^^^
spec/routing/poin_events_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/poin_events/1").to route_to("poin_events#update", id: "1")
                    ^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:31:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/poin_events/1").to route_to("poin_events#update", id: "1")
                                                  ^^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:31:77: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/poin_events/1").to route_to("poin_events#update", id: "1")
                                                                            ^^^
spec/routing/poin_events_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/poin_events/1").to route_to("poin_events#destroy", id: "1")
                     ^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:35:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/poin_events/1").to route_to("poin_events#destroy", id: "1")
                                                   ^^^^^^^^^^^^^^^^^^^^^
spec/routing/poin_events_routing_spec.rb:35:79: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/poin_events/1").to route_to("poin_events#destroy", id: "1")
                                                                              ^^^
spec/routing/referrals_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/referrals_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe ReferralsController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/referrals_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/referrals").to route_to("referrals#index")
                  ^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:6:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/referrals").to route_to("referrals#index")
                                            ^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/referrals/new").to route_to("referrals#new")
                  ^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:10:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/referrals/new").to route_to("referrals#new")
                                                ^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/referrals/1").to route_to("referrals#show", id: "1")
                  ^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:14:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/referrals/1").to route_to("referrals#show", id: "1")
                                              ^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:14:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/referrals/1").to route_to("referrals#show", id: "1")
                                                                    ^^^
spec/routing/referrals_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/referrals/1/edit").to route_to("referrals#edit", id: "1")
                  ^^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:18:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/referrals/1/edit").to route_to("referrals#edit", id: "1")
                                                   ^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:18:74: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/referrals/1/edit").to route_to("referrals#edit", id: "1")
                                                                         ^^^
spec/routing/referrals_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/referrals_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/referrals").to route_to("referrals#create")
                   ^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:23:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/referrals").to route_to("referrals#create")
                                             ^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/referrals/1").to route_to("referrals#update", id: "1")
                  ^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:27:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/referrals/1").to route_to("referrals#update", id: "1")
                                              ^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:27:71: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/referrals/1").to route_to("referrals#update", id: "1")
                                                                      ^^^
spec/routing/referrals_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/referrals/1").to route_to("referrals#update", id: "1")
                    ^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:31:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/referrals/1").to route_to("referrals#update", id: "1")
                                                ^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:31:73: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/referrals/1").to route_to("referrals#update", id: "1")
                                                                        ^^^
spec/routing/referrals_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/referrals/1").to route_to("referrals#destroy", id: "1")
                     ^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:35:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/referrals/1").to route_to("referrals#destroy", id: "1")
                                                 ^^^^^^^^^^^^^^^^^^^
spec/routing/referrals_routing_spec.rb:35:75: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/referrals/1").to route_to("referrals#destroy", id: "1")
                                                                          ^^^
spec/routing/users_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/users_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe UsersController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/users_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/users").to route_to("users#index")
                  ^^^^^^^^
spec/routing/users_routing_spec.rb:6:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/users").to route_to("users#index")
                                        ^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/users/new").to route_to("users#new")
                  ^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:10:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/users/new").to route_to("users#new")
                                            ^^^^^^^^^^^
spec/routing/users_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/users/1").to route_to("users#show", id: "1")
                  ^^^^^^^^^^
spec/routing/users_routing_spec.rb:14:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/users/1").to route_to("users#show", id: "1")
                                          ^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:14:61: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/users/1").to route_to("users#show", id: "1")
                                                            ^^^
spec/routing/users_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/users/1/edit").to route_to("users#edit", id: "1")
                  ^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:18:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/users/1/edit").to route_to("users#edit", id: "1")
                                               ^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:18:66: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/users/1/edit").to route_to("users#edit", id: "1")
                                                                 ^^^
spec/routing/users_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/users_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/users").to route_to("users#create")
                   ^^^^^^^^
spec/routing/users_routing_spec.rb:23:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/users").to route_to("users#create")
                                         ^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/users/1").to route_to("users#update", id: "1")
                  ^^^^^^^^^^
spec/routing/users_routing_spec.rb:27:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/users/1").to route_to("users#update", id: "1")
                                          ^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:27:63: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/users/1").to route_to("users#update", id: "1")
                                                              ^^^
spec/routing/users_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/users/1").to route_to("users#update", id: "1")
                    ^^^^^^^^^^
spec/routing/users_routing_spec.rb:31:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/users/1").to route_to("users#update", id: "1")
                                            ^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:31:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/users/1").to route_to("users#update", id: "1")
                                                                ^^^
spec/routing/users_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/users/1").to route_to("users#destroy", id: "1")
                     ^^^^^^^^^^
spec/routing/users_routing_spec.rb:35:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/users/1").to route_to("users#destroy", id: "1")
                                             ^^^^^^^^^^^^^^^
spec/routing/users_routing_spec.rb:35:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/users/1").to route_to("users#destroy", id: "1")
                                                                  ^^^
spec/spec_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# This file was generated by the `rails generate rspec:install` command. Conventionally, all ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file was generated by the `rails generate rspec:install` command. Conventionally, all
^
spec/spec_helper.rb:54:1: C: [Correctable] Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/event_hists/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "event_hists/edit", type: :view do
               ^^^^^^^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than EventHist.create!(.
      event_id: 1, ...
      ^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:13:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit event_hist form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:16:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", event_hist_path(@event_hist), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:16:77: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", event_hist_path(@event_hist), "post" do
                                                                            ^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:17:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/event_hists/edit.html.erb_spec.rb:18:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[event_id]"
                    ^^^^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:18:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[event_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:20:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[user_id]"
                    ^^^^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:20:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[user_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:22:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[sign_in]"
                    ^^^^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:22:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[sign_in]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:24:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[point_recv]"
                    ^^^^^^^^^^^^^^^
spec/views/event_hists/edit.html.erb_spec.rb:24:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[point_recv]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/event_hists/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "event_hists/index", type: :view do
               ^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      EventHist.create!( ...
      ^^^^^^^^^^^^^^^^^^
spec/views/event_hists/index.html.erb_spec.rb:18:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/event_hists/index.html.erb_spec.rb:21:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of event_hists" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/index.html.erb_spec.rb:23:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 2.to_s, count: 2
                  ^^^^^^^
spec/views/event_hists/index.html.erb_spec.rb:24:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 3.to_s, count: 2
                  ^^^^^^^
spec/views/event_hists/index.html.erb_spec.rb:25:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: false.to_s, count: 2
                  ^^^^^^^
spec/views/event_hists/index.html.erb_spec.rb:26:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 4.to_s, count: 2
                  ^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/event_hists/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "event_hists/new", type: :view do
               ^^^^^^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than EventHist.new(.
      event_id: 1, ...
      ^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:13:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new event_hist form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:16:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", event_hists_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:16:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", event_hists_path, "post" do
                                                                ^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:17:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/event_hists/new.html.erb_spec.rb:18:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[event_id]"
                    ^^^^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:18:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[event_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:20:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[user_id]"
                    ^^^^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:20:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[user_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:22:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[sign_in]"
                    ^^^^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:22:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[sign_in]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:24:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[point_recv]"
                    ^^^^^^^^^^^^^^^
spec/views/event_hists/new.html.erb_spec.rb:24:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event_hist[point_recv]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/event_hists/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/event_hists/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "event_hists/show", type: :view do
               ^^^^^^^^^^^^^^^^^^
spec/views/event_hists/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than EventHist.create!(.
      event_id: 2, ...
      ^^^^^^^^^^^^
spec/views/event_hists/show.html.erb_spec.rb:13:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/events/edit.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [31/25]
RSpec.describe "events/edit", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "events/edit", type: :view do
               ^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Event.create!(.
      event_id: 1, ...
      ^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:7:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event_name: "MyString",
                  ^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:8:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event_type: "MyString",
                  ^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:9:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      description: "MyString",
                   ^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:12:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      password: "MyString",
                ^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:13:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      meeting_link: "MyString",
                    ^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:15:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      graphics: "MyString",
                ^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:20:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit event form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:23:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", event_path(@event), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:23:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", event_path(@event), "post" do
                                                                  ^^^^^^
spec/views/events/edit.html.erb_spec.rb:24:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/events/edit.html.erb_spec.rb:25:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_id]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:25:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_id]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:27:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_name]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:27:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_name]"
                                     ^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:29:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_type]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:29:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_type]"
                                     ^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[description]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:31:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[description]"
                                     ^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:33:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_creator]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:33:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_creator]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:35:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[virtual]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:35:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[virtual]"
                                     ^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:37:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[password]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:37:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[password]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:39:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[meeting_link]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:39:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[meeting_link]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:41:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[point_val]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:41:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[point_val]"
                                     ^^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:43:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[graphics]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:43:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[graphics]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:45:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[total_event_hr]"
                    ^^^^^^^^^^^^^^^
spec/views/events/edit.html.erb_spec.rb:45:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[total_event_hr]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/events/index.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [44/25]
RSpec.describe "events/index", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "events/index", type: :view do
               ^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:4:3: C: Metrics/BlockLength: Block has too many lines. [28/25]
  before(:each) do ...
  ^^^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      Event.create!( ...
      ^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:8:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        event_name: "Event Name",
                    ^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:9:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        event_type: "Event Type",
                    ^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:10:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        description: "Description",
                     ^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:13:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        password: "Password",
                  ^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:14:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        meeting_link: "Meeting Link",
                      ^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:16:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        graphics: "Graphics",
                  ^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:21:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        event_name: "Event Name",
                    ^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:22:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        event_type: "Event Type",
                    ^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:23:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        description: "Description",
                     ^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:26:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        password: "Password",
                  ^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:27:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        meeting_link: "Meeting Link",
                      ^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:29:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        graphics: "Graphics",
                  ^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:32:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/events/index.html.erb_spec.rb:35:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of events" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:37:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 2.to_s, count: 2
                  ^^^^^^^
spec/views/events/index.html.erb_spec.rb:38:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Event Name".to_s, count: 2
                  ^^^^^^^
spec/views/events/index.html.erb_spec.rb:38:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Event Name".to_s, count: 2
                                 ^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:39:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Event Type".to_s, count: 2
                  ^^^^^^^
spec/views/events/index.html.erb_spec.rb:39:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Event Type".to_s, count: 2
                                 ^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:40:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Description".to_s, count: 2
                  ^^^^^^^
spec/views/events/index.html.erb_spec.rb:40:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Description".to_s, count: 2
                                 ^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:41:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 3.to_s, count: 2
                  ^^^^^^^
spec/views/events/index.html.erb_spec.rb:42:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: false.to_s, count: 2
                  ^^^^^^^
spec/views/events/index.html.erb_spec.rb:43:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Password".to_s, count: 2
                  ^^^^^^^
spec/views/events/index.html.erb_spec.rb:43:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Password".to_s, count: 2
                                 ^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:44:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Meeting Link".to_s, count: 2
                  ^^^^^^^
spec/views/events/index.html.erb_spec.rb:44:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Meeting Link".to_s, count: 2
                                 ^^^^^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:45:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 4.to_s, count: 2
                  ^^^^^^^
spec/views/events/index.html.erb_spec.rb:46:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Graphics".to_s, count: 2
                  ^^^^^^^
spec/views/events/index.html.erb_spec.rb:46:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Graphics".to_s, count: 2
                                 ^^^^^^^^^^
spec/views/events/index.html.erb_spec.rb:47:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 5.5.to_s, count: 2
                  ^^^^^^^
spec/views/events/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/events/new.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [31/25]
RSpec.describe "events/new", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "events/new", type: :view do
               ^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Event.new(.
      event_id: 1, ...
      ^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:7:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event_name: "MyString",
                  ^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:8:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event_type: "MyString",
                  ^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:9:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      description: "MyString",
                   ^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:12:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      password: "MyString",
                ^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:13:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      meeting_link: "MyString",
                    ^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:15:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      graphics: "MyString",
                ^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:20:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new event form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:23:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", events_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:23:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", events_path, "post" do
                                                           ^^^^^^
spec/views/events/new.html.erb_spec.rb:24:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/events/new.html.erb_spec.rb:25:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_id]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:25:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_id]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:27:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_name]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:27:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_name]"
                                     ^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:29:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_type]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:29:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_type]"
                                     ^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[description]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:31:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[description]"
                                     ^^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:33:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_creator]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:33:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[event_creator]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:35:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[virtual]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:35:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[virtual]"
                                     ^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:37:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[password]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:37:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[password]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:39:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[meeting_link]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:39:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[meeting_link]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:41:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[point_val]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:41:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[point_val]"
                                     ^^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:43:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[graphics]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:43:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[graphics]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:45:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[total_event_hr]"
                    ^^^^^^^^^^^^^^^
spec/views/events/new.html.erb_spec.rb:45:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "event[total_event_hr]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/events/show.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [29/25]
RSpec.describe "events/show", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "events/show", type: :view do
               ^^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Event.create!(.
      event_id: 2, ...
      ^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:7:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event_name: "Event Name",
                  ^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:8:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      event_type: "Event Type",
                  ^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:9:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      description: "Description",
                   ^^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:12:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      password: "Password",
                ^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:13:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      meeting_link: "Meeting Link",
                    ^^^^^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:15:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      graphics: "Graphics",
                ^^^^^^^^^^
spec/views/events/show.html.erb_spec.rb:20:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/poin_events/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "poin_events/edit", type: :view do
               ^^^^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than PoinEvent.create!(.
      user_id: 1, ...
      ^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:8:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      description: "MyString",
                   ^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:14:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit poin_event form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:17:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", poin_event_path(@poin_event), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:17:77: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", poin_event_path(@poin_event), "post" do
                                                                            ^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:18:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/poin_events/edit.html.erb_spec.rb:19:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[user_id]"
                    ^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:19:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[user_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:21:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[balance]"
                    ^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:21:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[balance]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:23:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[description]"
                    ^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:23:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[description]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:25:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[admin_award_id]"
                    ^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:25:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[admin_award_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:27:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[hours_attend]"
                    ^^^^^^^^^^^^^^^
spec/views/poin_events/edit.html.erb_spec.rb:27:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[hours_attend]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/poin_events/index.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe "poin_events/index", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "poin_events/index", type: :view do
               ^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      PoinEvent.create!( ...
      ^^^^^^^^^^^^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:9:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        description: "Description",
                     ^^^^^^^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:16:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        description: "Description",
                     ^^^^^^^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:20:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/poin_events/index.html.erb_spec.rb:23:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of poin_events" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:25:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 2.to_s, count: 2
                  ^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:26:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 3.to_s, count: 2
                  ^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Description".to_s, count: 2
                  ^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:27:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Description".to_s, count: 2
                                 ^^^^^^^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:28:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 4.to_s, count: 2
                  ^^^^^^^
spec/views/poin_events/index.html.erb_spec.rb:29:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 5.5.to_s, count: 2
                  ^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/poin_events/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "poin_events/new", type: :view do
               ^^^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than PoinEvent.new(.
      user_id: 1, ...
      ^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:8:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      description: "MyString",
                   ^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:14:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new poin_event form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:17:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", poin_events_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:17:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", poin_events_path, "post" do
                                                                ^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:18:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/poin_events/new.html.erb_spec.rb:19:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[user_id]"
                    ^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:19:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[user_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:21:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[balance]"
                    ^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:21:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[balance]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:23:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[description]"
                    ^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:23:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[description]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:25:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[admin_award_id]"
                    ^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:25:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[admin_award_id]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:27:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[hours_attend]"
                    ^^^^^^^^^^^^^^^
spec/views/poin_events/new.html.erb_spec.rb:27:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "poin_event[hours_attend]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/poin_events/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/poin_events/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "poin_events/show", type: :view do
               ^^^^^^^^^^^^^^^^^^
spec/views/poin_events/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than PoinEvent.create!(.
      user_id: 2, ...
      ^^^^^^^^^^^
spec/views/poin_events/show.html.erb_spec.rb:8:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      description: "Description",
                   ^^^^^^^^^^^^^
spec/views/poin_events/show.html.erb_spec.rb:14:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/referrals/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "referrals/edit", type: :view do
               ^^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Referral.create!(.
      old_member: 1, ...
      ^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:8:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      guest_first_name: "MyString",
                        ^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:9:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      guest_last_name: "MyString",
                       ^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:11:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      email: "MyString",
             ^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:12:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      admin_approved: "MyString"
                      ^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:16:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit referral form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:19:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", referral_path(@referral), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:19:73: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", referral_path(@referral), "post" do
                                                                        ^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:20:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/referrals/edit.html.erb_spec.rb:21:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[old_member]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:21:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[old_member]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:23:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[new_member]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:23:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[new_member]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:25:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[guest_first_name]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:25:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[guest_first_name]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:27:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[guest_last_name]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:27:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[guest_last_name]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:29:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[medical_prof]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:29:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[medical_prof]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[email]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:31:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[email]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:33:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[admin_approved]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/edit.html.erb_spec.rb:33:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[admin_approved]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/referrals/index.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [32/25]
RSpec.describe "referrals/index", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "referrals/index", type: :view do
               ^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      Referral.create!( ...
      ^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:9:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        guest_first_name: "Guest First Name",
                          ^^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:10:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        guest_last_name: "Guest Last Name",
                         ^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:12:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        email: "Email",
               ^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:13:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        admin_approved: "Admin Approved"
                        ^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:18:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        guest_first_name: "Guest First Name",
                          ^^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:19:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        guest_last_name: "Guest Last Name",
                         ^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:21:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        email: "Email",
               ^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:22:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        admin_approved: "Admin Approved"
                        ^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:24:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/referrals/index.html.erb_spec.rb:27:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of referrals" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:29:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 2.to_s, count: 2
                  ^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:30:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 3.to_s, count: 2
                  ^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:31:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Guest First Name".to_s, count: 2
                  ^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:31:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Guest First Name".to_s, count: 2
                                 ^^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:32:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Guest Last Name".to_s, count: 2
                  ^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:32:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Guest Last Name".to_s, count: 2
                                 ^^^^^^^^^^^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:33:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: false.to_s, count: 2
                  ^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:34:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Email".to_s, count: 2
                  ^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:34:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Email".to_s, count: 2
                                 ^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:35:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Admin Approved".to_s, count: 2
                  ^^^^^^^
spec/views/referrals/index.html.erb_spec.rb:35:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Admin Approved".to_s, count: 2
                                 ^^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/referrals/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "referrals/new", type: :view do
               ^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Referral.new(.
      old_member: 1, ...
      ^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:8:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      guest_first_name: "MyString",
                        ^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:9:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      guest_last_name: "MyString",
                       ^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:11:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      email: "MyString",
             ^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:12:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      admin_approved: "MyString"
                      ^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:16:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new referral form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:19:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", referrals_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:19:63: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", referrals_path, "post" do
                                                              ^^^^^^
spec/views/referrals/new.html.erb_spec.rb:20:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/referrals/new.html.erb_spec.rb:21:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[old_member]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:21:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[old_member]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:23:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[new_member]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:23:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[new_member]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:25:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[guest_first_name]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:25:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[guest_first_name]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:27:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[guest_last_name]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:27:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[guest_last_name]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:29:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[medical_prof]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:29:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[medical_prof]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[email]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:31:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[email]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:33:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[admin_approved]"
                    ^^^^^^^^^^^^^^^
spec/views/referrals/new.html.erb_spec.rb:33:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "referral[admin_approved]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/referrals/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/referrals/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "referrals/show", type: :view do
               ^^^^^^^^^^^^^^^^
spec/views/referrals/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Referral.create!(.
      old_member: 2, ...
      ^^^^^^^^^^^^^^
spec/views/referrals/show.html.erb_spec.rb:8:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      guest_first_name: "Guest First Name",
                        ^^^^^^^^^^^^^^^^^^
spec/views/referrals/show.html.erb_spec.rb:9:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      guest_last_name: "Guest Last Name",
                       ^^^^^^^^^^^^^^^^^
spec/views/referrals/show.html.erb_spec.rb:11:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      email: "Email",
             ^^^^^^^
spec/views/referrals/show.html.erb_spec.rb:12:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      admin_approved: "Admin Approved"
                      ^^^^^^^^^^^^^^^^
spec/views/referrals/show.html.erb_spec.rb:16:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/users/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "users/edit", type: :view do
               ^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than User.create!(.
      user_id: 1, ...
      ^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      major: "MyString",
             ^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:9:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      email: "MyString",
             ^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      first_name: "MyString",
                  ^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:11:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      last_name: "MyString"
                 ^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:15:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit user form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", user_path(@user), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:18:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", user_path(@user), "post" do
                                                                ^^^^^^
spec/views/users/edit.html.erb_spec.rb:19:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/users/edit.html.erb_spec.rb:20:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[user_id]"
                    ^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:20:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[user_id]"
                                     ^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:22:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[major]"
                    ^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:22:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[major]"
                                     ^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:24:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[admin]"
                    ^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:24:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[admin]"
                                     ^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:26:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[email]"
                    ^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:26:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[email]"
                                     ^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:28:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[first_name]"
                    ^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:28:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[first_name]"
                                     ^^^^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:30:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[last_name]"
                    ^^^^^^^^^^^^^^^
spec/views/users/edit.html.erb_spec.rb:30:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[last_name]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/users/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/users/index.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [29/25]
RSpec.describe "users/index", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "users/index", type: :view do
               ^^^^^^^^^^^^^
spec/views/users/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      User.create!( ...
      ^^^^^^^^^^^^^
spec/views/users/index.html.erb_spec.rb:8:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        major: "Major",
               ^^^^^^^
spec/views/users/index.html.erb_spec.rb:10:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        email: "Email",
               ^^^^^^^
spec/views/users/index.html.erb_spec.rb:11:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        first_name: "First Name",
                    ^^^^^^^^^^^^
spec/views/users/index.html.erb_spec.rb:12:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        last_name: "Last Name"
                   ^^^^^^^^^^^
spec/views/users/index.html.erb_spec.rb:16:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        major: "Major",
               ^^^^^^^
spec/views/users/index.html.erb_spec.rb:18:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        email: "Email",
               ^^^^^^^
spec/views/users/index.html.erb_spec.rb:19:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        first_name: "First Name",
                    ^^^^^^^^^^^^
spec/views/users/index.html.erb_spec.rb:20:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        last_name: "Last Name"
                   ^^^^^^^^^^^
spec/views/users/index.html.erb_spec.rb:22:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/users/index.html.erb_spec.rb:25:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of users" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/index.html.erb_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: 2.to_s, count: 2
                  ^^^^^^^
spec/views/users/index.html.erb_spec.rb:28:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Major".to_s, count: 2
                  ^^^^^^^
spec/views/users/index.html.erb_spec.rb:28:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Major".to_s, count: 2
                                 ^^^^^^^
spec/views/users/index.html.erb_spec.rb:29:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: false.to_s, count: 2
                  ^^^^^^^
spec/views/users/index.html.erb_spec.rb:30:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Email".to_s, count: 2
                  ^^^^^^^
spec/views/users/index.html.erb_spec.rb:30:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Email".to_s, count: 2
                                 ^^^^^^^
spec/views/users/index.html.erb_spec.rb:31:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "First Name".to_s, count: 2
                  ^^^^^^^
spec/views/users/index.html.erb_spec.rb:31:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "First Name".to_s, count: 2
                                 ^^^^^^^^^^^^
spec/views/users/index.html.erb_spec.rb:32:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Last Name".to_s, count: 2
                  ^^^^^^^
spec/views/users/index.html.erb_spec.rb:32:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Last Name".to_s, count: 2
                                 ^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/users/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "users/new", type: :view do
               ^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than User.new(.
      user_id: 1, ...
      ^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      major: "MyString",
             ^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:9:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      email: "MyString",
             ^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      first_name: "MyString",
                  ^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:11:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      last_name: "MyString"
                 ^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:15:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new user form" do
     ^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", users_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:18:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", users_path, "post" do
                                                          ^^^^^^
spec/views/users/new.html.erb_spec.rb:19:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/users/new.html.erb_spec.rb:20:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[user_id]"
                    ^^^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:20:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[user_id]"
                                     ^^^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:22:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[major]"
                    ^^^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:22:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[major]"
                                     ^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:24:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[admin]"
                    ^^^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:24:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[admin]"
                                     ^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:26:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[email]"
                    ^^^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:26:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[email]"
                                     ^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:28:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[first_name]"
                    ^^^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:28:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[first_name]"
                                     ^^^^^^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:30:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[last_name]"
                    ^^^^^^^^^^^^^^^
spec/views/users/new.html.erb_spec.rb:30:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "user[last_name]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/users/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/users/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/users/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "users/show", type: :view do
               ^^^^^^^^^^^^
spec/views/users/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than User.create!(.
      user_id: 2, ...
      ^^^^^^^^^^^
spec/views/users/show.html.erb_spec.rb:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      major: "Major",
             ^^^^^^^
spec/views/users/show.html.erb_spec.rb:9:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      email: "Email",
             ^^^^^^^
spec/views/users/show.html.erb_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      first_name: "First Name",
                  ^^^^^^^^^^^^
spec/views/users/show.html.erb_spec.rb:11:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      last_name: "Last Name"
                 ^^^^^^^^^^^
spec/views/users/show.html.erb_spec.rb:15:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/application_system_test_case.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/application_system_test_case.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/application_system_test_case.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/channels/application_cable/connection_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:3:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ApplicationCable::ConnectionTest < ActionCable::Connection::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
ENV['RAILS_ENV'] ||= 'test' ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['RAILS_ENV'] ||= 'test'
^
test/test_helper.rb:2:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require_relative "../config/environment"
                 ^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:3:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails/test_help"
        ^^^^^^^^^^^^^^^^^
test/test_helper.rb:5:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ActiveSupport::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^

123 files inspected, 1284 offenses detected, 1114 offenses auto-correctable
